version: '3.0'
networks:
  docker-mongo-network:
services:
  php:
    build:
      context: .
      dockerfile: ./php/Dockerfile
    container_name: "docker-mongo-php"
    volumes:
      - "./php/php.ini:/usr/local/etc/php/conf.d/php.ini"
      - "..:/var/www/html"
      - "./storage/public:/var/www/html/public/storage"
    ports:
      - "9999:9000"
    networks:
      - docker-mongo-network
  web:
    image: nginx:stable-alpine
    container_name: "docker-mongo-nginx"
    ports:
      - "9080:80"
    volumes:
      - "..:/var/www/html"
      - "./storage/public:/var/www/html/public/storage"
      - "./nginx/default.conf:/etc/nginx/conf.d/default.conf"
      - "./nginx/nginx.conf:/etc/nginx/nginx.conf"
      - "../storage/logs/nginx:/var/log/nginx"
    depends_on:
      - php
    networks:
      - docker-mongo-network
  mongo:
      container_name: "docker-mongo-php"
      image: mongo
      restart: always
      ports:
          - 27017:27017
      environment:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: example
      volumes:
          - ./mongo/data:/data/db/
          - /etc/timezone:/etc/timezone:ro
      networks:
          - docker-mongo-network
  mongo-express:
      container_name: "docker-mongo-express"
      image: mongo-express
      restart: always
      ports:
          - 8081:8081
      environment:
          ME_CONFIG_MONGODB_ADMINUSERNAME: root
          ME_CONFIG_MONGODB_ADMINPASSWORD: example
          ME_CONFIG_MONGODB_SERVER: mongo
          ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
          ME_CONFIG_BASICAUTH_USERNAME: root
          ME_CONFIG_BASICAUTH_PASSWORD: example
      networks:
          - docker-mongo-network
